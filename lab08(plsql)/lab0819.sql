--Лабораторная работа №6. PL/SQL

--1. Добавьте в таблицу SALARY столбец TAX (налог) для вычисления ежемесячного подоходного налога на зарплату по прогрессивной шкале. Налог вычисляется по следующему правилу:
-- -налог равен 9% от начисленной в месяце зарплаты, если суммарная зарплата с начала года до конца рассматриваемого месяца не превышает 20 000;
-- -налог равен 12% от начисленной в месяце зарплаты, если суммарная зарплата с начала года до конца рассматриваемого месяца больше 20 000, но не превышает 30 000;
-- -налог равен 15% от начисленной в месяце зарплаты, если суммарная зарплата с начала года до конца рассматриваемого месяца больше 30 000.
--Alter table SALARY add (TAX NUMBER (15));

--2. Составьте программу вычисления налога и вставки её в таблицу SALARY:
--a) с помощью простого цикла (loop) с курсором и оператора if;
--b) с помощью простого цикла (loop) с курсором и оператора case;
--c) с помощью курсорного цикла FOR;
--d) с помощью курсора с параметром, передавая номер сотрудника, для которого необходимо посчитать налог.

--3. Оформите составленные программы в виде процедур.

--4. Создайте процедуру, вычисляющую налог на зарплату за всё время начислений для конкретного сотрудника. В качестве параметров передать процент налога (до 20000, до 30000, выше 30000, номер сотрудника).

--5. Создайте функцию, вычисляющую суммарный налог на зарплату сотрудника за всё время начислений. В качестве параметров передать процент налога (до 20000, до 30000, выше 30000, номер сотрудника). Возвращаемое значение – суммарный налог.

--6. Создайте пакет, включающий в свой состав процедуру вычисления налога для всех сотрудников, процедуру вычисления налогов для отдельного сотрудника, идентифицируемого своим номером, функцию вычисления суммарного налога на зарплату сотрудника за всё время начислений.

--7. Создайте триггер, действующий при обновлении данных в таблице SALARY. А именно, если происходит обновление поля SALVALUE, то при назначении новой зарплаты, меньшей чем должностной оклад (таблица JOB, поле MINSALARY), изменение не вносится  и сохраняется старое значение, если новое значение зарплаты больше должностного оклада, то изменение вносится.

--8. Создайте триггер, действующий при удалении записи из таблицы CAREER. Если в удаляемой строке поле ENDDATE содержит NULL, то запись не удаляется, в противном случае удаляется.

--9. Создайте триггер, действующий на добавление или изменение данных в таблице EMP. Если во вставляемой или изменяемой строке поле BIRTHDATE содержит NULL, то после вставки или изменения должно быть выдано сообщение ‘BERTHDATE is NULL’. Если во вставляемой или изменяемой строке поле BIRTHDATE содержит дату ранее ‘01-01-1940’, то должно быть выдано сообщение ‘PENTIONA’. Во вновь вставляемой строке имя служащего должно быть приведено к заглавным буквам.

--10. Создайте программу изменения типа заданной переменной из символьного типа (VARCHAR2) в числовой тип (NUMBER). Программа должна содержать раздел обработки исключений. Обработка должна заключаться в выдаче сообщения ‘ERROR: argument is not a number’. Исключительная ситуация возникает при задании строки в виде числа с запятой, разделяющей дробную и целую части.